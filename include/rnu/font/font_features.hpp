#pragma once

#include <rnu/font/font_table.hpp>

namespace rnu
{
  // https://docs.microsoft.com/en-us/typography/opentype/spec/featurelist
  enum class font_feature : std::uint32_t
  {
    ft_aalt = make_u32tag("aalt"), // Access All Alternates
    ft_abvf = make_u32tag("abvf"), // Above-base Forms
    ft_abvm = make_u32tag("abvm"), // Above-base Mark Positioning
    ft_abvs = make_u32tag("abvs"), // Above-base Substitutions
    ft_afrc = make_u32tag("afrc"), // Alternative Fractions
    ft_akhn = make_u32tag("akhn"), // Akhand
    ft_blwf = make_u32tag("blwf"), // Below-base Forms
    ft_blwm = make_u32tag("blwm"), // Below-base Mark Positioning
    ft_blws = make_u32tag("blws"), // Below-base Substitutions
    ft_calt = make_u32tag("calt"), // Contextual Alternates
    ft_case = make_u32tag("case"), // Case-Sensitive Forms
    ft_ccmp = make_u32tag("ccmp"), // Glyph Composition / Decomposition
    ft_cfar = make_u32tag("cfar"), // Conjunct Form After Ro
    ft_chws = make_u32tag("chws"), // Contextual Half-width Spacing
    ft_cjct = make_u32tag("cjct"), // Conjunct Forms
    ft_clig = make_u32tag("clig"), // Contextual Ligatures
    ft_cpct = make_u32tag("cpct"), // Centered CJK Punctuation
    ft_cpsp = make_u32tag("cpsp"), // Capital Spacing
    ft_cswh = make_u32tag("cswh"), // Contextual Swash
    ft_curs = make_u32tag("curs"), // Cursive Positioning
    ft_cv01 = make_u32tag("cv01"), // Character Variants
    ft_cv02 = make_u32tag("cv02"),
    ft_cv03 = make_u32tag("cv03"),
    ft_cv04 = make_u32tag("cv04"),
    ft_cv05 = make_u32tag("cv05"),
    ft_cv06 = make_u32tag("cv06"),
    ft_cv07 = make_u32tag("cv07"),
    ft_cv08 = make_u32tag("cv08"),
    ft_cv09 = make_u32tag("cv09"),
    ft_cv10 = make_u32tag("cv10"),
    ft_cv11 = make_u32tag("cv11"),
    ft_cv12 = make_u32tag("cv12"),
    ft_cv13 = make_u32tag("cv13"),
    ft_cv14 = make_u32tag("cv14"),
    ft_cv15 = make_u32tag("cv15"),
    ft_cv16 = make_u32tag("cv16"),
    ft_cv17 = make_u32tag("cv17"),
    ft_cv18 = make_u32tag("cv18"),
    ft_cv19 = make_u32tag("cv19"),
    ft_cv20 = make_u32tag("cv20"),
    ft_cv21 = make_u32tag("cv21"),
    ft_cv22 = make_u32tag("cv22"),
    ft_cv23 = make_u32tag("cv23"),
    ft_cv24 = make_u32tag("cv24"),
    ft_cv25 = make_u32tag("cv25"),
    ft_cv26 = make_u32tag("cv26"),
    ft_cv27 = make_u32tag("cv27"),
    ft_cv28 = make_u32tag("cv28"),
    ft_cv29 = make_u32tag("cv29"),
    ft_cv30 = make_u32tag("cv30"),
    ft_cv31 = make_u32tag("cv31"),
    ft_cv32 = make_u32tag("cv32"),
    ft_cv33 = make_u32tag("cv33"),
    ft_cv34 = make_u32tag("cv34"),
    ft_cv35 = make_u32tag("cv35"),
    ft_cv36 = make_u32tag("cv36"),
    ft_cv37 = make_u32tag("cv37"),
    ft_cv38 = make_u32tag("cv38"),
    ft_cv39 = make_u32tag("cv39"),
    ft_cv40 = make_u32tag("cv40"),
    ft_cv41 = make_u32tag("cv41"),
    ft_cv42 = make_u32tag("cv42"),
    ft_cv43 = make_u32tag("cv43"),
    ft_cv44 = make_u32tag("cv44"),
    ft_cv45 = make_u32tag("cv45"),
    ft_cv46 = make_u32tag("cv46"),
    ft_cv47 = make_u32tag("cv47"),
    ft_cv48 = make_u32tag("cv48"),
    ft_cv49 = make_u32tag("cv49"),
    ft_cv50 = make_u32tag("cv50"),
    ft_cv51 = make_u32tag("cv51"),
    ft_cv52 = make_u32tag("cv52"),
    ft_cv53 = make_u32tag("cv53"),
    ft_cv54 = make_u32tag("cv54"),
    ft_cv55 = make_u32tag("cv55"),
    ft_cv56 = make_u32tag("cv56"),
    ft_cv57 = make_u32tag("cv57"),
    ft_cv58 = make_u32tag("cv58"),
    ft_cv59 = make_u32tag("cv59"),
    ft_cv60 = make_u32tag("cv60"),
    ft_cv61 = make_u32tag("cv61"),
    ft_cv62 = make_u32tag("cv62"),
    ft_cv63 = make_u32tag("cv63"),
    ft_cv64 = make_u32tag("cv64"),
    ft_cv65 = make_u32tag("cv65"),
    ft_cv66 = make_u32tag("cv66"),
    ft_cv67 = make_u32tag("cv67"),
    ft_cv68 = make_u32tag("cv68"),
    ft_cv69 = make_u32tag("cv69"),
    ft_cv70 = make_u32tag("cv70"),
    ft_cv71 = make_u32tag("cv71"),
    ft_cv72 = make_u32tag("cv72"),
    ft_cv73 = make_u32tag("cv73"),
    ft_cv74 = make_u32tag("cv74"),
    ft_cv75 = make_u32tag("cv75"),
    ft_cv76 = make_u32tag("cv76"),
    ft_cv77 = make_u32tag("cv77"),
    ft_cv78 = make_u32tag("cv78"),
    ft_cv79 = make_u32tag("cv79"),
    ft_cv80 = make_u32tag("cv80"),
    ft_cv81 = make_u32tag("cv81"),
    ft_cv82 = make_u32tag("cv82"),
    ft_cv83 = make_u32tag("cv83"),
    ft_cv84 = make_u32tag("cv84"),
    ft_cv85 = make_u32tag("cv85"),
    ft_cv86 = make_u32tag("cv86"),
    ft_cv87 = make_u32tag("cv87"),
    ft_cv88 = make_u32tag("cv88"),
    ft_cv89 = make_u32tag("cv89"),
    ft_cv90 = make_u32tag("cv90"),
    ft_cv91 = make_u32tag("cv91"),
    ft_cv92 = make_u32tag("cv92"),
    ft_cv93 = make_u32tag("cv93"),
    ft_cv94 = make_u32tag("cv94"),
    ft_cv95 = make_u32tag("cv95"),
    ft_cv96 = make_u32tag("cv96"),
    ft_cv97 = make_u32tag("cv97"),
    ft_cv98 = make_u32tag("cv98"),
    ft_cv99 = make_u32tag("cv99"),
    ft_c2pc = make_u32tag("c2pc"), // Petite Capitals From Capitals
    ft_c2sc = make_u32tag("c2sc"), // Small Capitals From Capitals
    ft_dist = make_u32tag("dist"), // Distances
    ft_dlig = make_u32tag("dlig"), // Discretionary Ligatures
    ft_dnom = make_u32tag("dnom"), // Denominators
    ft_dtls = make_u32tag("dtls"), // Dotless Forms
    ft_expt = make_u32tag("expt"), // Expert Forms
    ft_falt = make_u32tag("falt"), // Final Glyph on Line Alternates
    ft_fin2 = make_u32tag("fin2"), // Terminal Forms #2
    ft_fin3 = make_u32tag("fin3"), // Terminal Forms #3
    ft_fina = make_u32tag("fina"), // Terminal Forms
    ft_flac = make_u32tag("flac"), // Flattened accent forms
    ft_frac = make_u32tag("frac"), // Fractions
    ft_fwid = make_u32tag("fwid"), // Full Widths
    ft_half = make_u32tag("half"), // Half Forms
    ft_haln = make_u32tag("haln"), // Halant Forms
    ft_halt = make_u32tag("halt"), // Alternate Half Widths
    ft_hist = make_u32tag("hist"), // Historical Forms
    ft_hkna = make_u32tag("hkna"), // Horizontal Kana Alternates
    ft_hlig = make_u32tag("hlig"), // Historical Ligatures
    ft_hngl = make_u32tag("hngl"), // Hangul
    ft_hojo = make_u32tag("hojo"), // Hojo Kanji Forms (JIS X 0212-1990 Kanji Forms)
    ft_hwid = make_u32tag("hwid"), // Half Widths
    ft_init = make_u32tag("init"), // Initial Forms
    ft_isol = make_u32tag("isol"), // Isolated Forms
    ft_ital = make_u32tag("ital"), // Italics
    ft_jalt = make_u32tag("jalt"), // Justification Alternates
    ft_jp78 = make_u32tag("jp78"), // JIS78 Forms
    ft_jp83 = make_u32tag("jp83"), // JIS83 Forms
    ft_jp90 = make_u32tag("jp90"), // JIS90 Forms
    ft_jp04 = make_u32tag("jp04"), // JIS2004 Forms
    ft_kern = make_u32tag("kern"), // Kerning
    ft_lfbd = make_u32tag("lfbd"), // Left Bounds
    ft_liga = make_u32tag("liga"), // Standard Ligatures
    ft_ljmo = make_u32tag("ljmo"), // Leading Jamo Forms
    ft_lnum = make_u32tag("lnum"), // Lining Figures
    ft_locl = make_u32tag("locl"), // Localized Forms
    ft_ltra = make_u32tag("ltra"), // Left-to-right alternates
    ft_ltrm = make_u32tag("ltrm"), // Left-to-right mirrored forms
    ft_mark = make_u32tag("mark"), // Mark Positioning
    ft_med2 = make_u32tag("med2"), // Medial Forms #2
    ft_medi = make_u32tag("medi"), // Medial Forms
    ft_mgrk = make_u32tag("mgrk"), // Mathematical Greek
    ft_mkmk = make_u32tag("mkmk"), // Mark to Mark Positioning
    ft_mset = make_u32tag("mset"), // Mark Positioning via Substitution
    ft_nalt = make_u32tag("nalt"), // Alternate Annotation Forms
    ft_nlck = make_u32tag("nlck"), // NLC Kanji Forms
    ft_nukt = make_u32tag("nukt"), // Nukta Forms
    ft_numr = make_u32tag("numr"), // Numerators
    ft_onum = make_u32tag("onum"), // Oldstyle Figures
    ft_opbd = make_u32tag("opbd"), // Optical Bounds
    ft_ordn = make_u32tag("ordn"), // Ordinals
    ft_ornm = make_u32tag("ornm"), // Ornaments
    ft_palt = make_u32tag("palt"), // Proportional Alternate Widths
    ft_pcap = make_u32tag("pcap"), // Petite Capitals
    ft_pkna = make_u32tag("pkna"), // Proportional Kana
    ft_pnum = make_u32tag("pnum"), // Proportional Figures
    ft_pref = make_u32tag("pref"), // Pre-Base Forms
    ft_pres = make_u32tag("pres"), // Pre-base Substitutions
    ft_pstf = make_u32tag("pstf"), // Post-base Forms
    ft_psts = make_u32tag("psts"), // Post-base Substitutions
    ft_pwid = make_u32tag("pwid"), // Proportional Widths
    ft_qwid = make_u32tag("qwid"), // Quarter Widths
    ft_rand = make_u32tag("rand"), // Randomize
    ft_rclt = make_u32tag("rclt"), // Required Contextual Alternates
    ft_rkrf = make_u32tag("rkrf"), // Rakar Forms
    ft_rlig = make_u32tag("rlig"), // Required Ligatures
    ft_rphf = make_u32tag("rphf"), // Reph Forms
    ft_rtbd = make_u32tag("rtbd"), // Right Bounds
    ft_rtla = make_u32tag("rtla"), // Right-to-left alternates
    ft_rtlm = make_u32tag("rtlm"), // Right-to-left mirrored forms
    ft_ruby = make_u32tag("ruby"), // Ruby Notation Forms
    ft_rvrn = make_u32tag("rvrn"), // Required Variation Alternates
    ft_salt = make_u32tag("salt"), // Stylistic Alternates
    ft_sinf = make_u32tag("sinf"), // Scientific Inferiors
    ft_size = make_u32tag("size"), // Optical size
    ft_smcp = make_u32tag("smcp"), // Small Capitals
    ft_smpl = make_u32tag("smpl"), // Simplified Forms
    ft_ss01 = make_u32tag("ss01"), // Stylistic Set 1
    ft_ss02 = make_u32tag("ss02"), // Stylistic Set 2
    ft_ss03 = make_u32tag("ss03"), // Stylistic Set 3
    ft_ss04 = make_u32tag("ss04"), // Stylistic Set 4
    ft_ss05 = make_u32tag("ss05"), // Stylistic Set 5
    ft_ss06 = make_u32tag("ss06"), // Stylistic Set 6
    ft_ss07 = make_u32tag("ss07"), // Stylistic Set 7
    ft_ss08 = make_u32tag("ss08"), // Stylistic Set 8
    ft_ss09 = make_u32tag("ss09"), // Stylistic Set 9
    ft_ss10 = make_u32tag("ss10"), // Stylistic Set 10
    ft_ss11 = make_u32tag("ss11"), // Stylistic Set 11
    ft_ss12 = make_u32tag("ss12"), // Stylistic Set 12
    ft_ss13 = make_u32tag("ss13"), // Stylistic Set 13
    ft_ss14 = make_u32tag("ss14"), // Stylistic Set 14
    ft_ss15 = make_u32tag("ss15"), // Stylistic Set 15
    ft_ss16 = make_u32tag("ss16"), // Stylistic Set 16
    ft_ss17 = make_u32tag("ss17"), // Stylistic Set 17
    ft_ss18 = make_u32tag("ss18"), // Stylistic Set 18
    ft_ss19 = make_u32tag("ss19"), // Stylistic Set 19
    ft_ss20 = make_u32tag("ss20"), // Stylistic Set 20
    ft_ssty = make_u32tag("ssty"), // Math script style alternates
    ft_stch = make_u32tag("stch"), // Stretching Glyph Decomposition
    ft_subs = make_u32tag("subs"), // Subscript
    ft_sups = make_u32tag("sups"), // Superscript
    ft_swsh = make_u32tag("swsh"), // Swash
    ft_titl = make_u32tag("titl"), // Titling
    ft_tjmo = make_u32tag("tjmo"), // Trailing Jamo Forms
    ft_tnam = make_u32tag("tnam"), // Traditional Name Forms
    ft_tnum = make_u32tag("tnum"), // Tabular Figures
    ft_trad = make_u32tag("trad"), // Traditional Forms
    ft_twid = make_u32tag("twid"), // Third Widths
    ft_unic = make_u32tag("unic"), // Unicase
    ft_valt = make_u32tag("valt"), // Alternate Vertical Metrics
    ft_vatu = make_u32tag("vatu"), // Vattu Variants
    ft_vchw = make_u32tag("vchw"), // Vertical Contextual Half-width Spacing
    ft_vert = make_u32tag("vert"), // Vertical Writing
    ft_vhal = make_u32tag("vhal"), // Alternate Vertical Half Metrics
    ft_vjmo = make_u32tag("vjmo"), // Vowel Jamo Forms
    ft_vkna = make_u32tag("vkna"), // Vertical Kana Alternates
    ft_vkrn = make_u32tag("vkrn"), // Vertical Kerning
    ft_vpal = make_u32tag("vpal"), // Proportional Alternate Vertical Metrics
    ft_vrt2 = make_u32tag("vrt2"), // Vertical Alternates and Rotation
    ft_vrtr = make_u32tag("vrtr"), // Vertical Alternates for Rotation
    ft_zero = make_u32tag("zero"), // Slashed Zero
  };
}